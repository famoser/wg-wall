º
GC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Model\Base\BaseEntity.cs
	namespace 	
WgWall
 
. 
Data 
. 
Model 
. 
Base  
{ 
public 

abstract 
class 

BaseEntity $
:% &
BaseIdEntity' 3
{ 
public 
int 
? 
CreatedById 
{  !
get" %
;% &
set' *
;* +
}, -
public 
virtual 
FrontendUser #
	CreatedBy$ -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public		 
DateTime		 
	CreatedAt		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
	protected 
static 
T 
RegisterCreation +
<+ ,
T, -
>- .
(. /
T/ 0
self1 5
,5 6
FrontendUser7 C
frontendUserD P
)P Q
where 
T 
: 

BaseEntity 
{ 	
self 
. 
	CreatedAt 
= 
new  
DateTime! )
() *
)* +
;+ ,
self 
. 
	CreatedBy 
= 
frontendUser )
;) *
return 
self 
; 
} 	
} 
} ˙
IC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Model\Base\BaseIdEntity.cs
	namespace 	
WgWall
 
. 
Data 
. 
Model 
. 
Base  
{ 
public 

abstract 
class 
BaseIdEntity &
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
}		 
}

 ç
DC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Model\FrontendUser.cs
	namespace 	
WgWall
 
. 
Data 
. 
Model 
{ 
public 

class 
FrontendUser 
: 

BaseEntity  *
{ 
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
Karma

 
{

 
get

 
;

 
set

  #
;

# $
}

% &
public 
string 
ProfileImageSrc %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[ 	
InverseProperty	 
( 
$str #
)# $
]$ %
public 
virtual 
List 
< 
Product #
># $
BoughtProducts% 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
static 
FrontendUser "
Create# )
() *
string* 0
name1 5
,5 6
FrontendUser7 C
	createdByD M
=N O
nullO S
)S T
{ 	
var 
element 
= 
new 
FrontendUser *
{+ ,
Name, 0
=1 2
name3 7
}7 8
;8 9
RegisterCreation 
( 
element $
,$ %
	createdBy& /
)/ 0
;0 1
return 
element 
; 
} 	
} 
} Â
?C:\Users\flmo\source\repos\wg-wall\WgWall.Data\Model\Product.cs
	namespace 	
WgWall
 
. 
Data 
. 
Model 
{ 
public 

class 
Product 
: 

BaseEntity %
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Amount 
{ 
get 
;  
set! $
;$ %
}& '
public		 
int		 
?		 

BoughtById		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
virtual

 
FrontendUser

 #
BoughtBy

$ ,
{

- .
get

/ 2
;

2 3
set

4 7
;

7 8
}

9 :
public 
static 
Product 
Create $
($ %
string% +
name, 0
,0 1
FrontendUser2 >
	createdBy? H
=I J
nullK O
)O P
{ 	
var 
element 
= 
new 
Product %
{& '
Name( ,
=- .
name/ 3
}4 5
;5 6
RegisterCreation 
( 
element $
,$ %
	createdBy& /
)/ 0
;0 1
return 
element 
; 
} 	
} 
} ˙
?C:\Users\flmo\source\repos\wg-wall\WgWall.Data\Model\Setting.cs
	namespace 	
WgWall
 
. 
Data 
. 
Model 
{ 
public 

class 
Setting 
: 
BaseIdEntity '
{ 
public 
string 
Key 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Value 
{ 
get !
;! "
set# &
;& '
}( )
}		 
}

 ¬	
=C:\Users\flmo\source\repos\wg-wall\WgWall.Data\MyDbContext.cs
	namespace 	
WgWall
 
. 
Data 
{ 
public 

class 
MyDbContext 
: 
	DbContext (
{ 
public 
MyDbContext 
( 
DbContextOptions +
<+ ,
MyDbContext, 7
>7 8
options9 @
)@ A
: 
base 
( 
options 
) 
{ 	
} 	
public 
DbSet 
< 
Product 
> 
Products &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
FrontendUser !
>! "
FrontendUsers# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
DbSet 
< 
Setting 
> 
Settings &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ó
SC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Repository\FrontendUserRepository.cs
	namespace 	
WgWall
 
. 
Data 
. 

Repository  
{		 
public

 

class

 "
FrontendUserRepository

 '
:

( )#
IFrontendUserRepository

* A
{ 
private 
readonly 
MyDbContext $
_context% -
;- .
public "
FrontendUserRepository %
(% &
MyDbContext& 1
context2 9
)9 :
{ 	
_context 
= 
context 
; 
} 	
public 
Task 
< 
FrontendUser  
>  !
TryGet" (
(( )
int) ,
frontendUserId- ;
); <
{ 	
return 
_context 
. 
FrontendUsers )
.) *
FirstOrDefaultAsync* =
(= >
fu> @
=>A C
fuD F
.F G
IdG I
==J L
frontendUserIdM [
)[ \
;\ ]
} 	
public 
async 
Task 
< 
FrontendUser &
>& '
CreateAsync( 3
(3 4
string4 :
name; ?
)? @
{ 	
var 
user 
= 
await 
_context %
.% &
FrontendUsers& 3
.3 4
FirstOrDefaultAsync4 G
(G H
eH I
=>J L
eM N
.N O
NameO S
==T V
nameW [
)[ \
;\ ]
if 
( 
user 
== 
null 
) 
{ 
user 
= 
FrontendUser #
.# $
Create$ *
(* +
name+ /
)/ 0
;0 1
_context 
. 
FrontendUsers &
.& '
Add' *
(* +
user+ /
)/ 0
;0 1
await 
_context 
. 
SaveChangesAsync /
(/ 0
)0 1
;1 2
}   
return"" 
user"" 
;"" 
}## 	
public%% 
Task%% 
<%% 
List%% 
<%% 
FrontendUser%% %
>%%% &
>%%& '
GetAllAsync%%( 3
(%%3 4
)%%4 5
{&& 	
return'' 
_context'' 
.'' 
FrontendUsers'' )
.'') *
ToListAsync''* 5
(''5 6
)''6 7
;''7 8
}(( 	
})) 
}** Ø
_C:\Users\flmo\source\repos\wg-wall\WgWall.Data\Repository\Interfaces\IFrontendUserRepository.cs
	namespace 	
WgWall
 
. 
Data 
. 

Repository  
.  !

Interfaces! +
{ 
public 

	interface #
IFrontendUserRepository ,
{ 
Task		 
<		 
FrontendUser		 
>		 
TryGet		 !
(		! "
int		" %
frontendUserId		& 4
)		4 5
;		5 6
Task

 
<

 
FrontendUser

 
>

 
CreateAsync

 &
(

& '
string

' -
name

. 2
)

2 3
;

3 4
Task 
< 
List 
< 
FrontendUser 
> 
>  
GetAllAsync! ,
(, -
)- .
;. /
} 
} Ã
ZC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Repository\Interfaces\IProductRepository.cs
	namespace 	
WgWall
 
. 
Data 
. 

Repository  
.  !

Interfaces! +
{ 
public		 

	interface		 
IProductRepository		 '
{

 
Task 
< 
Product 
> 
TryGet 
( 
int  
	productId! *
)* +
;+ ,
Task 
Update 
( 
Product 
product #
)# $
;$ %
Task 
< 
Product 
> 
Create 
( 
string #
name$ (
,( )
FrontendUser* 6
frontendUser7 C
)C D
;D E
Task 
< 
List 
< 
Product 
> 
> 
GetAllAsync '
(' (
)( )
;) *
} 
} ·
ZC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Repository\Interfaces\ISettingRepository.cs
	namespace 	
WgWall
 
. 
Data 
. 

Repository  
.  !

Interfaces! +
{ 
public 

	interface 
ISettingRepository '
{ 
Task		 
Persist		 
(		 
string		 
key		 
,		  
string		! '
value		( -
)		- .
;		. /
Task

 
<

 
List

 
<

 
Setting

 
>

 
>

 
GetAllAsync

 '
(

' (
)

( )
;

) *
} 
} †
NC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Repository\ProductRepository.cs
	namespace		 	
WgWall		
 
.		 
Data		 
.		 

Repository		  
{

 
public 

class 
ProductRepository "
:# $
IProductRepository% 7
{ 
private 
readonly 
MyDbContext $
_context% -
;- .
public 
ProductRepository  
(  !
MyDbContext! ,
context- 4
)4 5
{ 	
_context 
= 
context 
; 
} 	
public 
Task 
< 
Product 
> 
TryGet #
(# $
int$ '
	productId( 1
)1 2
{ 	
return 
_context 
. 
Products $
.$ %
FirstOrDefaultAsync% 8
(8 9
p9 :
=>; =
p> ?
.? @
Id@ B
==C E
	productIdF O
)O P
;P Q
} 	
public 
async 
Task 
Update  
(  !
Product! (
product) 0
)0 1
{ 	
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
Product !
>! "
Create# )
() *
string* 0
name1 5
,5 6
FrontendUser7 C
frontendUserD P
)P Q
{ 	
var   
product   
=   
Product   !
.  ! "
Create  " (
(  ( )
name  ) -
,  - .
frontendUser  / ;
)  ; <
;  < =
product!! 
.!! 
Amount!! 
=!! 
$num!! 
;!! 
_context"" 
."" 
Products"" 
."" 
Add"" !
(""! "
product""" )
)"") *
;""* +
await## 
_context## 
.## 
SaveChangesAsync## +
(##+ ,
)##, -
;##- .
return%% 
product%% 
;%% 
}&& 	
public(( 
Task(( 
<(( 
List(( 
<(( 
Product((  
>((  !
>((! "
GetAllAsync((# .
(((. /
)((/ 0
{)) 	
return** 
_context** 
.** 
Products** $
.**$ %
ToListAsync**% 0
(**0 1
)**1 2
;**2 3
}++ 	
},, 
}-- ´
NC:\Users\flmo\source\repos\wg-wall\WgWall.Data\Repository\SettingRepository.cs
	namespace 	
WgWall
 
. 
Data 
. 

Repository  
{ 
public		 

class		 
SettingRepository		 "
:		# $
ISettingRepository		% 7
{

 
private 
readonly 
MyDbContext $
_context% -
;- .
public 
SettingRepository  
(  !
MyDbContext! ,
context- 4
)4 5
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
Persist !
(! "
string" (
key) ,
,, -
string. 4
value5 :
): ;
{ 	
var 
existing 
= 
await  
_context! )
.) *
Settings* 2
.2 3
FirstOrDefaultAsync3 F
(F G
sG H
=>I K
sL M
.M N
KeyN Q
==R T
keyU X
)X Y
;Y Z
if 
( 
existing 
== 
null  
)  !
{ 
existing 
= 
new 
Setting &
{' (
Key) ,
=- .
key/ 2
}3 4
;4 5
_context 
. 
Settings !
.! "
Add" %
(% &
existing& .
). /
;/ 0
} 
existing 
. 
Value 
= 
value "
;" #
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
Task 
< 
List 
< 
Setting  
>  !
>! "
GetAllAsync# .
(. /
)/ 0
{   	
return!! 
_context!! 
.!! 
Settings!! $
.!!$ %
ToListAsync!!% 0
(!!0 1
)!!1 2
;!!2 3
}"" 	
}## 
}$$ 